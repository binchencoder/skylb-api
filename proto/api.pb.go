// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/api.proto

package proto

import (
	context "context"
	data "github.com/binchencoder/gateway-proto/data"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Operation int32

const (
	Operation_Add    Operation = 0
	Operation_Delete Operation = 1
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "Add",
		1: "Delete",
	}
	Operation_value = map[string]int32{
		"Add":    0,
		"Delete": 1,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

type ServiceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	PortName    string `protobuf:"bytes,3,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
}

func (x *ServiceSpec) Reset() {
	*x = ServiceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec) ProtoMessage() {}

func (x *ServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec.ProtoReflect.Descriptor instead.
func (*ServiceSpec) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceSpec) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ServiceSpec) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceSpec) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

type ResolveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Services             []*ServiceSpec `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	CallerServiceId      data.ServiceId `protobuf:"varint,2,opt,name=callerServiceId,proto3,enum=data.ServiceId" json:"callerServiceId,omitempty"`
	CallerServiceName    string         `protobuf:"bytes,3,opt,name=callerServiceName,proto3" json:"callerServiceName,omitempty"`
	ResolveFullEndpoints bool           `protobuf:"varint,4,opt,name=resolve_full_endpoints,json=resolveFullEndpoints,proto3" json:"resolve_full_endpoints,omitempty"`
}

func (x *ResolveRequest) Reset() {
	*x = ResolveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRequest) ProtoMessage() {}

func (x *ResolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRequest.ProtoReflect.Descriptor instead.
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *ResolveRequest) GetServices() []*ServiceSpec {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ResolveRequest) GetCallerServiceId() data.ServiceId {
	if x != nil {
		return x.CallerServiceId
	}
	return data.ServiceId(0)
}

func (x *ResolveRequest) GetCallerServiceName() string {
	if x != nil {
		return x.CallerServiceName
	}
	return ""
}

func (x *ResolveRequest) GetResolveFullEndpoints() bool {
	if x != nil {
		return x.ResolveFullEndpoints
	}
	return false
}

type InstanceEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Op     Operation `protobuf:"varint,1,opt,name=op,proto3,enum=api.Operation" json:"op,omitempty"`
	Host   string    `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port   int32     `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Weight int32     `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *InstanceEndpoint) Reset() {
	*x = InstanceEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceEndpoint) ProtoMessage() {}

func (x *InstanceEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceEndpoint.ProtoReflect.Descriptor instead.
func (*InstanceEndpoint) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Do not use.
func (x *InstanceEndpoint) GetOp() Operation {
	if x != nil {
		return x.Op
	}
	return Operation_Add
}

func (x *InstanceEndpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *InstanceEndpoint) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *InstanceEndpoint) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type ServiceEndpoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec          *ServiceSpec        `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	InstEndpoints []*InstanceEndpoint `protobuf:"bytes,2,rep,name=inst_endpoints,json=instEndpoints,proto3" json:"inst_endpoints,omitempty"`
}

func (x *ServiceEndpoints) Reset() {
	*x = ServiceEndpoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceEndpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceEndpoints) ProtoMessage() {}

func (x *ServiceEndpoints) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceEndpoints.ProtoReflect.Descriptor instead.
func (*ServiceEndpoints) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceEndpoints) GetSpec() *ServiceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ServiceEndpoints) GetInstEndpoints() []*InstanceEndpoint {
	if x != nil {
		return x.InstEndpoints
	}
	return nil
}

type ResolveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcEndpoints *ServiceEndpoints `protobuf:"bytes,1,opt,name=svc_endpoints,json=svcEndpoints,proto3" json:"svc_endpoints,omitempty"`
}

func (x *ResolveResponse) Reset() {
	*x = ResolveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveResponse) ProtoMessage() {}

func (x *ResolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveResponse.ProtoReflect.Descriptor instead.
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *ResolveResponse) GetSvcEndpoints() *ServiceEndpoints {
	if x != nil {
		return x.SvcEndpoints
	}
	return nil
}

type ReportLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec      *ServiceSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Port      int32        `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Weight    int32        `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	FixedHost string       `protobuf:"bytes,4,opt,name=fixed_host,json=fixedHost,proto3" json:"fixed_host,omitempty"`
}

func (x *ReportLoadRequest) Reset() {
	*x = ReportLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportLoadRequest) ProtoMessage() {}

func (x *ReportLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportLoadRequest.ProtoReflect.Descriptor instead.
func (*ReportLoadRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *ReportLoadRequest) GetSpec() *ServiceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ReportLoadRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ReportLoadRequest) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ReportLoadRequest) GetFixedHost() string {
	if x != nil {
		return x.FixedHost
	}
	return ""
}

type ReportLoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportLoadResponse) Reset() {
	*x = ReportLoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportLoadResponse) ProtoMessage() {}

func (x *ReportLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportLoadResponse.ProtoReflect.Descriptor instead.
func (*ReportLoadResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

type CheckHealthInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckHealthInstruction) Reset() {
	*x = CheckHealthInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHealthInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthInstruction) ProtoMessage() {}

func (x *CheckHealthInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthInstruction.ProtoReflect.Descriptor instead.
func (*CheckHealthInstruction) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

type HealthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Latency  int32  `protobuf:"varint,2,opt,name=latency,proto3" json:"latency,omitempty"`
}

func (x *HealthInfo) Reset() {
	*x = HealthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthInfo) ProtoMessage() {}

func (x *HealthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthInfo.ProtoReflect.Descriptor instead.
func (*HealthInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *HealthInfo) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *HealthInfo) GetLatency() int32 {
	if x != nil {
		return x.Latency
	}
	return 0
}

type CheckHealthResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthInfo []*HealthInfo `protobuf:"bytes,1,rep,name=health_info,json=healthInfo,proto3" json:"health_info,omitempty"`
}

func (x *CheckHealthResult) Reset() {
	*x = CheckHealthResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckHealthResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthResult) ProtoMessage() {}

func (x *CheckHealthResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthResult.ProtoReflect.Descriptor instead.
func (*CheckHealthResult) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *CheckHealthResult) GetHealthInfo() []*HealthInfo {
	if x != nil {
		return x.HealthInfo
	}
	return nil
}

type FetchInstancesInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FetchInstancesInstruction) Reset() {
	*x = FetchInstancesInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInstancesInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInstancesInstruction) ProtoMessage() {}

func (x *FetchInstancesInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInstancesInstruction.ProtoReflect.Descriptor instead.
func (*FetchInstancesInstruction) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

type FetchInstancesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcEndpoints *ServiceEndpoints `protobuf:"bytes,1,opt,name=svc_endpoints,json=svcEndpoints,proto3" json:"svc_endpoints,omitempty"`
}

func (x *FetchInstancesResult) Reset() {
	*x = FetchInstancesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchInstancesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInstancesResult) ProtoMessage() {}

func (x *FetchInstancesResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInstancesResult.ProtoReflect.Descriptor instead.
func (*FetchInstancesResult) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *FetchInstancesResult) GetSvcEndpoints() *ServiceEndpoints {
	if x != nil {
		return x.SvcEndpoints
	}
	return nil
}

type AddInstanceInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcEndpoints *ServiceEndpoints `protobuf:"bytes,1,opt,name=svc_endpoints,json=svcEndpoints,proto3" json:"svc_endpoints,omitempty"`
}

func (x *AddInstanceInstruction) Reset() {
	*x = AddInstanceInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstanceInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstanceInstruction) ProtoMessage() {}

func (x *AddInstanceInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstanceInstruction.ProtoReflect.Descriptor instead.
func (*AddInstanceInstruction) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

func (x *AddInstanceInstruction) GetSvcEndpoints() *ServiceEndpoints {
	if x != nil {
		return x.SvcEndpoints
	}
	return nil
}

type AddInstanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddInstanceResult) Reset() {
	*x = AddInstanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInstanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInstanceResult) ProtoMessage() {}

func (x *AddInstanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInstanceResult.ProtoReflect.Descriptor instead.
func (*AddInstanceResult) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{13}
}

type DeleteInstanceInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SvcEndpoints *ServiceEndpoints `protobuf:"bytes,1,opt,name=svc_endpoints,json=svcEndpoints,proto3" json:"svc_endpoints,omitempty"`
}

func (x *DeleteInstanceInstruction) Reset() {
	*x = DeleteInstanceInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceInstruction) ProtoMessage() {}

func (x *DeleteInstanceInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceInstruction.ProtoReflect.Descriptor instead.
func (*DeleteInstanceInstruction) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteInstanceInstruction) GetSvcEndpoints() *ServiceEndpoints {
	if x != nil {
		return x.SvcEndpoints
	}
	return nil
}

type DeleteInstanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteInstanceResult) Reset() {
	*x = DeleteInstanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceResult) ProtoMessage() {}

func (x *DeleteInstanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceResult.ProtoReflect.Descriptor instead.
func (*DeleteInstanceResult) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{15}
}

type DiagnoseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Instruction:
	//	*DiagnoseRequest_CheckHealth
	//	*DiagnoseRequest_FetchInstances
	//	*DiagnoseRequest_AddInstance
	//	*DiagnoseRequest_DeleteInstance
	Instruction isDiagnoseRequest_Instruction `protobuf_oneof:"instruction"`
}

func (x *DiagnoseRequest) Reset() {
	*x = DiagnoseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnoseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseRequest) ProtoMessage() {}

func (x *DiagnoseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseRequest.ProtoReflect.Descriptor instead.
func (*DiagnoseRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{16}
}

func (m *DiagnoseRequest) GetInstruction() isDiagnoseRequest_Instruction {
	if m != nil {
		return m.Instruction
	}
	return nil
}

func (x *DiagnoseRequest) GetCheckHealth() *CheckHealthInstruction {
	if x, ok := x.GetInstruction().(*DiagnoseRequest_CheckHealth); ok {
		return x.CheckHealth
	}
	return nil
}

func (x *DiagnoseRequest) GetFetchInstances() *FetchInstancesInstruction {
	if x, ok := x.GetInstruction().(*DiagnoseRequest_FetchInstances); ok {
		return x.FetchInstances
	}
	return nil
}

func (x *DiagnoseRequest) GetAddInstance() *AddInstanceInstruction {
	if x, ok := x.GetInstruction().(*DiagnoseRequest_AddInstance); ok {
		return x.AddInstance
	}
	return nil
}

func (x *DiagnoseRequest) GetDeleteInstance() *DeleteInstanceInstruction {
	if x, ok := x.GetInstruction().(*DiagnoseRequest_DeleteInstance); ok {
		return x.DeleteInstance
	}
	return nil
}

type isDiagnoseRequest_Instruction interface {
	isDiagnoseRequest_Instruction()
}

type DiagnoseRequest_CheckHealth struct {
	CheckHealth *CheckHealthInstruction `protobuf:"bytes,1,opt,name=check_health,json=checkHealth,proto3,oneof"`
}

type DiagnoseRequest_FetchInstances struct {
	FetchInstances *FetchInstancesInstruction `protobuf:"bytes,2,opt,name=fetch_instances,json=fetchInstances,proto3,oneof"`
}

type DiagnoseRequest_AddInstance struct {
	AddInstance *AddInstanceInstruction `protobuf:"bytes,3,opt,name=add_instance,json=addInstance,proto3,oneof"`
}

type DiagnoseRequest_DeleteInstance struct {
	DeleteInstance *DeleteInstanceInstruction `protobuf:"bytes,4,opt,name=delete_instance,json=deleteInstance,proto3,oneof"`
}

func (*DiagnoseRequest_CheckHealth) isDiagnoseRequest_Instruction() {}

func (*DiagnoseRequest_FetchInstances) isDiagnoseRequest_Instruction() {}

func (*DiagnoseRequest_AddInstance) isDiagnoseRequest_Instruction() {}

func (*DiagnoseRequest_DeleteInstance) isDiagnoseRequest_Instruction() {}

type DiagnoseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*DiagnoseResponse_CheckHealth
	//	*DiagnoseResponse_FetchInstances
	//	*DiagnoseResponse_AddInstance
	//	*DiagnoseResponse_DeleteInstance
	Result isDiagnoseResponse_Result `protobuf_oneof:"result"`
}

func (x *DiagnoseResponse) Reset() {
	*x = DiagnoseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiagnoseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnoseResponse) ProtoMessage() {}

func (x *DiagnoseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnoseResponse.ProtoReflect.Descriptor instead.
func (*DiagnoseResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{17}
}

func (m *DiagnoseResponse) GetResult() isDiagnoseResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *DiagnoseResponse) GetCheckHealth() *CheckHealthResult {
	if x, ok := x.GetResult().(*DiagnoseResponse_CheckHealth); ok {
		return x.CheckHealth
	}
	return nil
}

func (x *DiagnoseResponse) GetFetchInstances() *FetchInstancesResult {
	if x, ok := x.GetResult().(*DiagnoseResponse_FetchInstances); ok {
		return x.FetchInstances
	}
	return nil
}

func (x *DiagnoseResponse) GetAddInstance() *AddInstanceResult {
	if x, ok := x.GetResult().(*DiagnoseResponse_AddInstance); ok {
		return x.AddInstance
	}
	return nil
}

func (x *DiagnoseResponse) GetDeleteInstance() *DeleteInstanceResult {
	if x, ok := x.GetResult().(*DiagnoseResponse_DeleteInstance); ok {
		return x.DeleteInstance
	}
	return nil
}

type isDiagnoseResponse_Result interface {
	isDiagnoseResponse_Result()
}

type DiagnoseResponse_CheckHealth struct {
	CheckHealth *CheckHealthResult `protobuf:"bytes,1,opt,name=check_health,json=checkHealth,proto3,oneof"`
}

type DiagnoseResponse_FetchInstances struct {
	FetchInstances *FetchInstancesResult `protobuf:"bytes,2,opt,name=fetch_instances,json=fetchInstances,proto3,oneof"`
}

type DiagnoseResponse_AddInstance struct {
	AddInstance *AddInstanceResult `protobuf:"bytes,3,opt,name=add_instance,json=addInstance,proto3,oneof"`
}

type DiagnoseResponse_DeleteInstance struct {
	DeleteInstance *DeleteInstanceResult `protobuf:"bytes,4,opt,name=delete_instance,json=deleteInstance,proto3,oneof"`
}

func (*DiagnoseResponse_CheckHealth) isDiagnoseResponse_Result() {}

func (*DiagnoseResponse_FetchInstances) isDiagnoseResponse_Result() {}

func (*DiagnoseResponse_AddInstance) isDiagnoseResponse_Result() {}

func (*DiagnoseResponse_DeleteInstance) isDiagnoseResponse_Result() {}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52,
	0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x22, 0x76, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x18, 0x01, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x76, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x76, 0x63, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x73, 0x76, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x78, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x0a, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x45,
	0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x76,
	0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x73, 0x76, 0x63, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x76, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x0c,
	0x73, 0x76, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x57, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a,
	0x0a, 0x0d, 0x73, 0x76, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x73, 0x76,
	0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63,
	0x68, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa2, 0x02, 0x0a, 0x10, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x44, 0x0a, 0x0f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2a, 0x20, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x10, 0x01, 0x32, 0xc7, 0x01, 0x0a, 0x05, 0x53, 0x6b, 0x79, 0x6c, 0x62,
	0x12, 0x36, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x12, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x45, 0x0a, 0x12, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x2e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x69, 0x6e, 0x63, 0x68, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x6b, 0x79, 0x6c, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_api_proto_goTypes = []interface{}{
	(Operation)(0),                    // 0: api.Operation
	(*ServiceSpec)(nil),               // 1: api.ServiceSpec
	(*ResolveRequest)(nil),            // 2: api.ResolveRequest
	(*InstanceEndpoint)(nil),          // 3: api.InstanceEndpoint
	(*ServiceEndpoints)(nil),          // 4: api.ServiceEndpoints
	(*ResolveResponse)(nil),           // 5: api.ResolveResponse
	(*ReportLoadRequest)(nil),         // 6: api.ReportLoadRequest
	(*ReportLoadResponse)(nil),        // 7: api.ReportLoadResponse
	(*CheckHealthInstruction)(nil),    // 8: api.CheckHealthInstruction
	(*HealthInfo)(nil),                // 9: api.HealthInfo
	(*CheckHealthResult)(nil),         // 10: api.CheckHealthResult
	(*FetchInstancesInstruction)(nil), // 11: api.FetchInstancesInstruction
	(*FetchInstancesResult)(nil),      // 12: api.FetchInstancesResult
	(*AddInstanceInstruction)(nil),    // 13: api.AddInstanceInstruction
	(*AddInstanceResult)(nil),         // 14: api.AddInstanceResult
	(*DeleteInstanceInstruction)(nil), // 15: api.DeleteInstanceInstruction
	(*DeleteInstanceResult)(nil),      // 16: api.DeleteInstanceResult
	(*DiagnoseRequest)(nil),           // 17: api.DiagnoseRequest
	(*DiagnoseResponse)(nil),          // 18: api.DiagnoseResponse
	(data.ServiceId)(0),               // 19: data.ServiceId
}
var file_proto_api_proto_depIdxs = []int32{
	1,  // 0: api.ResolveRequest.services:type_name -> api.ServiceSpec
	19, // 1: api.ResolveRequest.callerServiceId:type_name -> data.ServiceId
	0,  // 2: api.InstanceEndpoint.op:type_name -> api.Operation
	1,  // 3: api.ServiceEndpoints.spec:type_name -> api.ServiceSpec
	3,  // 4: api.ServiceEndpoints.inst_endpoints:type_name -> api.InstanceEndpoint
	4,  // 5: api.ResolveResponse.svc_endpoints:type_name -> api.ServiceEndpoints
	1,  // 6: api.ReportLoadRequest.spec:type_name -> api.ServiceSpec
	9,  // 7: api.CheckHealthResult.health_info:type_name -> api.HealthInfo
	4,  // 8: api.FetchInstancesResult.svc_endpoints:type_name -> api.ServiceEndpoints
	4,  // 9: api.AddInstanceInstruction.svc_endpoints:type_name -> api.ServiceEndpoints
	4,  // 10: api.DeleteInstanceInstruction.svc_endpoints:type_name -> api.ServiceEndpoints
	8,  // 11: api.DiagnoseRequest.check_health:type_name -> api.CheckHealthInstruction
	11, // 12: api.DiagnoseRequest.fetch_instances:type_name -> api.FetchInstancesInstruction
	13, // 13: api.DiagnoseRequest.add_instance:type_name -> api.AddInstanceInstruction
	15, // 14: api.DiagnoseRequest.delete_instance:type_name -> api.DeleteInstanceInstruction
	10, // 15: api.DiagnoseResponse.check_health:type_name -> api.CheckHealthResult
	12, // 16: api.DiagnoseResponse.fetch_instances:type_name -> api.FetchInstancesResult
	14, // 17: api.DiagnoseResponse.add_instance:type_name -> api.AddInstanceResult
	16, // 18: api.DiagnoseResponse.delete_instance:type_name -> api.DeleteInstanceResult
	2,  // 19: api.Skylb.Resolve:input_type -> api.ResolveRequest
	6,  // 20: api.Skylb.ReportLoad:input_type -> api.ReportLoadRequest
	18, // 21: api.Skylb.AttachForDiagnosis:input_type -> api.DiagnoseResponse
	5,  // 22: api.Skylb.Resolve:output_type -> api.ResolveResponse
	7,  // 23: api.Skylb.ReportLoad:output_type -> api.ReportLoadResponse
	17, // 24: api.Skylb.AttachForDiagnosis:output_type -> api.DiagnoseRequest
	22, // [22:25] is the sub-list for method output_type
	19, // [19:22] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceEndpoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportLoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHealthInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckHealthResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInstancesInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchInstancesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstanceInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddInstanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnoseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiagnoseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*DiagnoseRequest_CheckHealth)(nil),
		(*DiagnoseRequest_FetchInstances)(nil),
		(*DiagnoseRequest_AddInstance)(nil),
		(*DiagnoseRequest_DeleteInstance)(nil),
	}
	file_proto_api_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*DiagnoseResponse_CheckHealth)(nil),
		(*DiagnoseResponse_FetchInstances)(nil),
		(*DiagnoseResponse_AddInstance)(nil),
		(*DiagnoseResponse_DeleteInstance)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		EnumInfos:         file_proto_api_proto_enumTypes,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SkylbClient is the client API for Skylb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SkylbClient interface {
	Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (Skylb_ResolveClient, error)
	ReportLoad(ctx context.Context, opts ...grpc.CallOption) (Skylb_ReportLoadClient, error)
	AttachForDiagnosis(ctx context.Context, opts ...grpc.CallOption) (Skylb_AttachForDiagnosisClient, error)
}

type skylbClient struct {
	cc grpc.ClientConnInterface
}

func NewSkylbClient(cc grpc.ClientConnInterface) SkylbClient {
	return &skylbClient{cc}
}

func (c *skylbClient) Resolve(ctx context.Context, in *ResolveRequest, opts ...grpc.CallOption) (Skylb_ResolveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Skylb_serviceDesc.Streams[0], "/api.Skylb/Resolve", opts...)
	if err != nil {
		return nil, err
	}
	x := &skylbResolveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Skylb_ResolveClient interface {
	Recv() (*ResolveResponse, error)
	grpc.ClientStream
}

type skylbResolveClient struct {
	grpc.ClientStream
}

func (x *skylbResolveClient) Recv() (*ResolveResponse, error) {
	m := new(ResolveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *skylbClient) ReportLoad(ctx context.Context, opts ...grpc.CallOption) (Skylb_ReportLoadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Skylb_serviceDesc.Streams[1], "/api.Skylb/ReportLoad", opts...)
	if err != nil {
		return nil, err
	}
	x := &skylbReportLoadClient{stream}
	return x, nil
}

type Skylb_ReportLoadClient interface {
	Send(*ReportLoadRequest) error
	CloseAndRecv() (*ReportLoadResponse, error)
	grpc.ClientStream
}

type skylbReportLoadClient struct {
	grpc.ClientStream
}

func (x *skylbReportLoadClient) Send(m *ReportLoadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *skylbReportLoadClient) CloseAndRecv() (*ReportLoadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ReportLoadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *skylbClient) AttachForDiagnosis(ctx context.Context, opts ...grpc.CallOption) (Skylb_AttachForDiagnosisClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Skylb_serviceDesc.Streams[2], "/api.Skylb/AttachForDiagnosis", opts...)
	if err != nil {
		return nil, err
	}
	x := &skylbAttachForDiagnosisClient{stream}
	return x, nil
}

type Skylb_AttachForDiagnosisClient interface {
	Send(*DiagnoseResponse) error
	Recv() (*DiagnoseRequest, error)
	grpc.ClientStream
}

type skylbAttachForDiagnosisClient struct {
	grpc.ClientStream
}

func (x *skylbAttachForDiagnosisClient) Send(m *DiagnoseResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *skylbAttachForDiagnosisClient) Recv() (*DiagnoseRequest, error) {
	m := new(DiagnoseRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SkylbServer is the server API for Skylb service.
type SkylbServer interface {
	Resolve(*ResolveRequest, Skylb_ResolveServer) error
	ReportLoad(Skylb_ReportLoadServer) error
	AttachForDiagnosis(Skylb_AttachForDiagnosisServer) error
}

// UnimplementedSkylbServer can be embedded to have forward compatible implementations.
type UnimplementedSkylbServer struct {
}

func (*UnimplementedSkylbServer) Resolve(*ResolveRequest, Skylb_ResolveServer) error {
	return status.Errorf(codes.Unimplemented, "method Resolve not implemented")
}
func (*UnimplementedSkylbServer) ReportLoad(Skylb_ReportLoadServer) error {
	return status.Errorf(codes.Unimplemented, "method ReportLoad not implemented")
}
func (*UnimplementedSkylbServer) AttachForDiagnosis(Skylb_AttachForDiagnosisServer) error {
	return status.Errorf(codes.Unimplemented, "method AttachForDiagnosis not implemented")
}

func RegisterSkylbServer(s *grpc.Server, srv SkylbServer) {
	s.RegisterService(&_Skylb_serviceDesc, srv)
}

func _Skylb_Resolve_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResolveRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SkylbServer).Resolve(m, &skylbResolveServer{stream})
}

type Skylb_ResolveServer interface {
	Send(*ResolveResponse) error
	grpc.ServerStream
}

type skylbResolveServer struct {
	grpc.ServerStream
}

func (x *skylbResolveServer) Send(m *ResolveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Skylb_ReportLoad_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SkylbServer).ReportLoad(&skylbReportLoadServer{stream})
}

type Skylb_ReportLoadServer interface {
	SendAndClose(*ReportLoadResponse) error
	Recv() (*ReportLoadRequest, error)
	grpc.ServerStream
}

type skylbReportLoadServer struct {
	grpc.ServerStream
}

func (x *skylbReportLoadServer) SendAndClose(m *ReportLoadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *skylbReportLoadServer) Recv() (*ReportLoadRequest, error) {
	m := new(ReportLoadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Skylb_AttachForDiagnosis_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SkylbServer).AttachForDiagnosis(&skylbAttachForDiagnosisServer{stream})
}

type Skylb_AttachForDiagnosisServer interface {
	Send(*DiagnoseRequest) error
	Recv() (*DiagnoseResponse, error)
	grpc.ServerStream
}

type skylbAttachForDiagnosisServer struct {
	grpc.ServerStream
}

func (x *skylbAttachForDiagnosisServer) Send(m *DiagnoseRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *skylbAttachForDiagnosisServer) Recv() (*DiagnoseResponse, error) {
	m := new(DiagnoseResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Skylb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Skylb",
	HandlerType: (*SkylbServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Resolve",
			Handler:       _Skylb_Resolve_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReportLoad",
			Handler:       _Skylb_ReportLoad_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "AttachForDiagnosis",
			Handler:       _Skylb_AttachForDiagnosis_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/api.proto",
}
